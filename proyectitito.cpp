#include <winbgim.h>
#include <stdio.h>
#include <conio.h>
#include <stdlib.h>
#include <string.h>
#include <mmsystem.h>
#include <windows.h>
#include <cstdlib>
#include <math.h>
#pragma comment (lib, "winmm.lib")

struct prearbol 
 {
 char c;
 int f,n1,n2,b,codigo[6];
 };
 
struct nodo
 {
	int f,x,y;
	struct nodo *izq,*der;
	int codigo[6];
	};
	
typedef struct nodo *arbol;

void waitForLeftMouseClick();
int tecladoint(int x, int y);
char tecladochar(int x, int y);
void imprime (int x, int y, int D);
int menu(void);
int submenu1(void);
int submenu3(void);
void llenadopa (struct prearbol PA[80]);
void fondo(void);
FILE * abrir(char NOMBRE[80],char R[3]);
void llenadopacadena(struct prearbol PA[80],char A[80]);
void llenadopaarchivo(struct prearbol PA[80],char A[80]);
void prearbol (struct prearbol PA[80]);
arbol crea (void);
arbol creaarbol (arbol cabeza,struct prearbol PA[80], int p,int x, int y);
int preorder(arbol cabeza);
void graficararbol (arbol cabeza,int x, int y);
void cargando (void);

 
int main()
{
    
    int m,sm1,sm3,i,barbol=0,x,y;
    char A[300],T[2];
    struct prearbol PA[80];
    FILE *fp;
    arbol cabeza;  
    
    cargando();                  
                       
    
    initwindow(1360,700); 
    
    clearviewport();
    
    //settextstyle(0,0,3);
    PlaySound("c:\\ex\\canttouch.wav", NULL, SND_FILENAME);
    do {//todo el programa

       m=menu();
       
       clearviewport();
         
       switch(m) {
                 case 0:
                      
                      do {// submenu 1
                      clearviewport();
                      sm1=submenu1();
//                      outtextxy(10, 10,"opcion 1");    NO SIRVE AQUI NECESITO PONERLO EN LA FUNCION DEL SUBMENU
                      switch (sm1) {
                                   case 0:
                                        clearviewport();
                                        settextstyle(0,0,2);
                                        outtextxy(70, 60,"Dame una frase y terminala con un guion (-)");
                                        x=60;
                                        y=100;
                                        i=0;
                                        do {
                                            A[i]=tecladochar(x,y);
                                            i++;
                                            x=x+15;
                                            if(x>=1270) {
                                                          x=30;
                                                          y=y+25;
                                                          }
                                           }while(A[i-1]!='-');
                                        A[i-1]='\0';
                                        //outtextxy(60,500,A);
                                        getch();
                                        barbol=1;    
                                        break;
                                   case 1:
                                        clearviewport();
                                        settextstyle(0,0,2);
                                        outtextxy(70, 60,"Dame la direccion del archivo");
                                        x=60;
                                        y=100;
                                        i=0;
                                        do {
                                            A[i]=tecladochar(x,y);
                                            i++;
                                            x=x+15;
                                            if(x>=1270) {
                                                          x=30;
                                                          y=y+25;
                                                          }
                                           }while(A[i-4]!='.');
                                        A[i]='\0';
                                        getch();
                                        barbol=2;    
                                        break;
                                   case 2:
                                        clearviewport();   
                                        break;
                                   }
                      }while(sm1!=2); //cierro el submenu1
                      
                      
                      if(barbol==1) {
                                    llenadopacadena(PA,A);
                                    prearbol(PA);
                                    for(i=0;i<=79;i++) {//<-sin este no sirve la funcion de crear arbol
                                                       if(PA[i].b==1) break;
                                                       }                            
                                    cabeza=crea();
                                    cabeza=creaarbol(cabeza,PA,i,1,1); 
                                    }
                      if(barbol==2) {
                                    llenadopaarchivo(PA,A);
                                    prearbol(PA);
                                    for(i=0;i<=79;i++) {//<-sin este no sirve la funcion de crear arbol
                                                       if(PA[i].b==1) break;
                                                       }                            
                                                       cabeza=crea();
                                                       cabeza=creaarbol(cabeza,PA,i,1,1); 
                                    }
                                               
                      /*for(i=0;i<=79;i++) { //comprobar que si se lleno ya con las frecuecias
                                          printf("%c ",PA[i].c);
                                          printf("%3i ",PA[i].f);
                                          printf("%3i ",PA[i].n1);
                                          printf("%3i ",PA[i].n2);
                                          printf("%3i ",PA[i].codigo);
                                          printf("%3i || ",PA[i].b);
                                          if((i+1)%3==0)printf("\n");
                                          }*/                    
//                      i=preorder(cabeza);                               
                      break;
                 case 1:
                      clearviewport();
                      setcolor(YELLOW);
                      graficararbol(cabeza,1,1);
                      getch();    
                      break;
                 case 2:
                      do {//submenu3
                      clearviewport();
                      sm3=submenu3();
//                      outtextxy(10, 10,"opcion 3");
                      switch (sm3) {
                                   case 0:
                                        clearviewport();
                                        settextstyle(1,0,2);
                                        setcolor(YELLOW);
                                        outtextxy(800,10,"Texto original");
                                        if(barbol==1) {
                                                      i=0;
                                                      x=40;
                                                      y=40;
                                                      do {
                                                         T[0]=A[i];
                                                         outtextxy(x,y,T);
                                                         x=x+25;
                                                         if(x%1315==0) {
                                                                       x=40;
                                                                       y=y+25;
                                                                       }
                                                         i++;              
                                                         }while(A[i-1]!='\0');
                                                      
                                                      }
                                                      
                                        if(barbol==2) {
                                                      fp=abrir(A,"r");
                                                      i=0;
                                                      x=40;
                                                      y=40;
                                                      while(!feof(fp)) {
                                                                       fscanf(fp,"%c",&T[0]);
                                                                       outtextxy(x,y,T);
                                                                       x=x+25;
                                                                       if(x%1315==0) {
                                                                                     x=40;
                                                                                     y=y+25;
                                                                                     }
                                                                       i++; 
                                                                       }
                                                      fclose(fp);                 
                                                      }
                                                      
                                        getch();    
                                        break;
                                   case 1:
                                        clearviewport();
                                        outtextxy(60, 60,"Codigo");
                                        getch();    
                                        break;
                                   case 2:
                                        clearviewport();    
                                        break;
                                   }
                      }while(sm3!=2); //cierro el submenu3  
                      break;
                 case 3:
                      clearviewport();
                      PlaySound("c:\\ex\\canttouch.wav", NULL, SND_FILENAME);
                      exit (1);
                      getch();   
                      break;
                 }
//                 PlaySound("c:\\ex\\lol.wav",NULL,SND_FILENAME);
       }while(m!=3);//cierro el menu, termino el programa
	return 0;
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////


void cargando (void)
{
     int x,i,e;
    char A[5];
    initwindow(400,300); 
    
    setlinestyle(1,1,5);
    rectangle(60,30,340,150);
    setcolor(7);
    outtextxy(120,40,"INSTALANDO PROGRAMA");
    setcolor(WHITE);
    setlinestyle(1,1,2);
    rectangle(80,60,320,80);
    
    outtextxy(120+90,90,"%");
    
    for(i=85;i<=315;i++) {
                         setcolor(BLUE);
                         bar(85,65,i,75);
                         setcolor(WHITE);
                         x=(i-85)*100/230;
                         itoa(x,A,10);
                         outtextxy(120+70,90,A);
                         delay(30);
                         if(x==100) outtextxy(130,110,"PROGRAMA INSTALADO");
                         if(x==99) delay(700);
                         if(x==34) {
                                   outtextxy(100,40,"                           ");
                                   outtextxy(140,40,"POR FAVOR ESPERE");
                                   delay(350);
                                   }
                         }
                         

    closegraph();  
}


//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////


void graficararbol (arbol cabeza,int x, int y)
{
     char T[80];
     int x1,y1,c,c2;
     arbol aux1,aux2;
     settextstyle(2,0,6);
     y1=y*60;
     c=(int)(1360/(((int)pow(2,(y-1)))+1));
     x1=x*c;
     setcolor(GREEN);
     circle(x1,y1,15);
     itoa(cabeza->f,T,10);
     setcolor(YELLOW);
     outtextxy(x1-7,y1-7,T);
     aux1=cabeza->izq;
     aux2=cabeza->der;
     if(aux1!=NULL) graficararbol(aux1,(x*2)-1,y+1);
     if(aux2!=NULL) graficararbol(aux2,x*2,y+1); 
                            
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////


  int preorder(arbol cabeza)
{
     arbol R,L;
     int x;

       if(cabeza==NULL)
	 return 1;
	 printf("%i, ",cabeza->f);
	     L=cabeza->der;
	     x=preorder(L);
	     R=cabeza->izq;
	     x=preorder(R);
	     return 1;

       }



//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////


arbol creaarbol (arbol cabeza,struct prearbol PA[80], int p,int x, int y)
{
      arbol nuevo;
      int g,n1,n2;
      
      
      n1=PA[p].n1;
      n2=PA[p].n2;
      if(PA[p].n1==100) return NULL;
      if(PA[p].n2==100) return NULL;
      nuevo=crea();
      
      nuevo->der=creaarbol(nuevo,PA,n1,(x*2)-1,y+1);
      nuevo->izq=creaarbol(nuevo,PA,n2,x*2,y+1);
      g=PA[p].f;
      
      nuevo->f=g;
      nuevo->x=x;
      nuevo->y=y;
      cabeza=nuevo;
      return cabeza;
} 

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////


arbol crea (void)
{
      arbol aux;
      aux=(arbol)malloc(sizeof(struct nodo));
	  if(aux==NULL) {
		            printf("ERROR <<Operacion Imposible>>");
		            getch();
		            exit(1);
		            }

	  aux->der=NULL;
	  aux->izq=NULL;
	  return (aux);
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

void prearbol (struct prearbol PA[80])
{
     int i,p1,p2,j,b,s,r,f1,f2;
     for(i=0;i<=39;i++) {
                       if(PA[i].f>0) {
                                     PA[i].b=1;
                                     }
                       }
        
    j=40;//<este es importante
    for(i=0;i<=79;i++) {
                       f1=32750;
                       f2=32750;
                       b=0;
                       s=0;
                       
                       for(r=0;r<=79;r++) {
                                          if(PA[r].b==1) {
                                                         s++;
                                                         }
                                          }
                       if(s<=1) break;
                       
                       for(p1=0;p1<=79;p1++) { //busca el menor
                                             if((PA[p1].f<f1)&&(PA[p1].b==1)) {
                                                                              f1=PA[p1].f;
                                                                              }
                                             }
                       for(p1=0;p1<=79;p1++) {//encuentra la posicion del menor
                                             if(PA[p1].f==f1&&PA[p1].b==1) {
                                                                           break;
                                                                           }
                                             }
                                             
                       PA[p1].b=0;
                                             
                                                                   
                       for(p2=0;p2<=79;p2++) {//encuentra el segundo menor
                                             if((PA[p2].f<f2)&&(PA[p2].b==1)) {
                                                                              f2=PA[p2].f;
                                                                              }
                                             }
                       for(p2=0;p2<=79;p2++) {//encuentra la posicion del segundo menor
                                             if(PA[p2].f==f2&&p2!=p1&&PA[p2].b==1) {
                                                                      break;
                                                                      }
                                             }

                       PA[p2].b=0;                      
                       PA[j].f=PA[p1].f+PA[p2].f;
                       PA[j].n1=p1;
                       PA[j].n2=p2;
                       PA[j].b=1;
                       j++;
                       for(r=0;r<=79;r++) {
                                          if(PA[r].b==1) {
                                                         s++;
                                                         }
                                          }
                                                                              
                       }
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////


void llenadopaarchivo(struct prearbol PA[80],char A[80])
{
     char s;
     int i; 
     FILE *fp;
     llenadopa(PA);
     fp=abrir(A,"r");
    for(i=0;i<=39;i++) {
                       while(!feof(fp)) {
                                         fscanf(fp,"%c",&s);
                                         //printf("%c",s);
                                         if(PA[i].c==s) {           
                                                           PA[i].f=PA[i].f+1;
                                                           }
                                         }
                       rewind(fp);                  
                       }
    fclose(fp);
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

void llenadopacadena(struct prearbol PA[80],char A[80])
{
     int i,j,n;
     llenadopa(PA);
     n=strlen(A);
    
    for(i=0;i<=39;i++) {
                       for(j=0;j<=n;j++) {
                                         if(PA[i].c==A[j]) {           
                                                           PA[i].f=PA[i].f+1;
                                                           }
                                         }
                       }
}


//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

FILE * abrir(char NOMBRE[80],char R[3])
{
     FILE *fp;
     
     fp=fopen(NOMBRE,R);
     
     if(fp==NULL){
                 printf("Error de apertura\nPresione una tecla pra continuar");
                 getch();
                 return NULL;
                 //exit(1);
                 }
     return fp;
 }


//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

void llenadopa (struct prearbol PA[80])
{
    int i; 
    
    for(i=0;i<=79;i++) {
                       PA[i].c='-';
                       PA[i].b=0;
                       PA[i].f=0;
                       PA[i].n1=79;
                       PA[i].n2=79;
                       PA[i].codigo[0]=-1;
                       PA[i].codigo[1]='\0';
                       }
    for(i=0;i<=26;i++) {
                       PA[i].c=i+97;
                       }
    for(i=26;i<=34;i++) {
                        PA[i].c=i+23;
                        }
    PA[79].n1=100;
    PA[79].n2=100;
    PA[35].c='0';
    PA[36].c='.';
    PA[37].c=',';
    PA[38].c=' ';
    PA[39].c=';';                   
}
 
//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////


char tecladochar(int x, int y)
{
    char T[3];
    T[0]=getch();
    outtextxy(x,y,T);
    return T[0];
}


//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////


int submenu3(void)
{
    int x,y,c,j,b,i;
    char SM3[4][30];
    j=0;
    x=0;
    y=0;
    c=1;
    settextstyle(0,0,3);
       
    strcpy(SM3[0],"1.- Texto original");
    strcpy(SM3[1],"2.- Codigo");
    strcpy(SM3[2],"3.- Salir al menu principal");   
    do {   //moverte por menu principal

          clearviewport();
//          fondo();  
          outtextxy(10, 10,"opcion 3");  
          for(i=0;i<=2;i++) {
                            if(i==j) {
                                     setcolor(4);
                                     }
                            else {
                                 setcolor(1);
                                 }
                            outtextxy(460,260+i*50,SM3[i]);
                            line(520,250+i*50,720,250+i*50);
                            line(520,450,720,450);
                            }
          
          if(b==1) break;                   
          
          do {
             getmouseclick(WM_LBUTTONDOWN,x,y);
             delay(100);
             if(kbhit()) {
                         c=0;
                         break;
                         }
              }while(y<=250||y>=400||y==-1);                    
           
           if(y>=250&&y<=400) {
                              if(y>250) j=0;
                              if(y>300) j=1;
                              if(y>350) j=2;
                             
                              c=13;
                              b=1;
                              break;
                              }
           
           
           if(b==1) break;
            
          
          if(c==0) {
                   c=getch();
                   if(c==72) {
                             if(j==0) {
                                      j=3;
                                      }
                             j--;
                             }
                   if(c==80) {
                             if(j==2) {
                                      j=-1;
                                      }
                             j++;
                             }
                   }
                                
          }while((c!=13||y>=250)&&(y<=400||b==0));
       return j;
}


//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

int submenu1(void)
{
    int x,y,c,j,b,i;
    char SM1[4][30];
    j=0;
    x=0;
    y=0;
    c=1;
    settextstyle(0,0,3);
       
    strcpy(SM1[0],"1.- Por teclado");
    strcpy(SM1[1],"2.- Por archivo");
    strcpy(SM1[2],"3.- Salir al menu principal");
    do {   //moverte por menu principal

          clearviewport(); 
//          fondo();  
          outtextxy(10, 10,"opcion 1"); 
          for(i=0;i<=2;i++) {
                            if(i==j) {
                                     setcolor(4);
                                     }
                            else {
                                 setcolor(1);
                                 }
                            outtextxy(460,260+i*50,SM1[i]);
                            line(520,250+i*50,720,250+i*50);
                            line(520,450,720,450);
                            }
          
          if(b==1) break;                   
          
          do {
             getmouseclick(WM_LBUTTONDOWN,x,y);
             delay(100);
             if(kbhit()) {
                         c=0;
                         break;
                         }
              }while(y<=250||y>=400||y==-1);                    
           
           if(y>=250&&y<=400) {
                              if(y>250) j=0;
                              if(y>300) j=1;
                              if(y>350) j=2;
                             
                              c=13;
                              b=1;
                              break;
                              }
           
           
           if(b==1) break;
            
          
          if(c==0) {
                   c=getch();
                   if(c==72) {
                             if(j==0) {
                                      j=3;
                                      }
                             j--;
                             }
                   if(c==80) {
                             if(j==2) {
                                      j=-1;
                                      }
                             j++;
                             }
                   }
                                
          }while((c!=13||y>=250)&&(y<=400||b==0));
       return j;
}


//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////


int menu(void)
{
    int x,y,c,j,b,i;
    char M1[4][30];
    j=0;
    x=0;
    y=0;
    c=1;
    settextstyle(0,0,3);
       
    strcpy(M1[0],"1.- Entrada");
    strcpy(M1[1],"2.- Imprimir arbol");
    strcpy(M1[2],"3.- Ver");
    strcpy(M1[3],"4.- Cerrar el programa");   
    do {   //moverte por menu principal

          clearviewport();
          fondo();  
          for(i=0;i<=3;i++) {
                            if(i==j) {
                                     setcolor(4);
                                     }
                            else {
                                 setcolor(1);
                                 }
                            outtextxy(460,260+i*50,M1[i]);
                            line(520,250+i*50,720,250+i*50);
                            line(520,450,720,450);
                            }
          
          if(b==1) break;                   
          
          do {
             getmouseclick(WM_LBUTTONDOWN,x,y);
             delay(100);
             if(kbhit()) {
                         c=0;
                         break;
                         }
              }while(y<=250||y>=450||y==-1);                    
           
           if(y>=250&&y<=450) {
                              if(y>250) j=0;
                              if(y>300) j=1;
                              if(y>350) j=2;
                              if(y>400) j=3;
                             
                              c=13;
                              b=1;
                              break;
                              }
           
           
           if(b==1) break;
            
          
          if(c==0) {
                   c=getch();
                   if(c==72) {
                             if(j==0) {
                                      j=4;
                                      }
                             j--;
                             }
                   if(c==80) {
                             if(j==3) {
                                      j=-1;
                                      }
                             j++;
                             }
                   }
                                
          }while((c!=13||y>=250)&&(y<=450||b==0));
       return j;
}



int teclado(int x, int y)

{char M[6];
 int t=0,n;
  do{
     M[t]=getch();
     t++;
     }while(M[t-1]!=13);
     M[t]='\0';
     outtextxy(x,y,M);
     n=atoi(M);
     return n;
 }

void imprime (int x, int y, int D)

{char R[6];
 itoa(D,R,10);
 outtextxy(100,150,"tu resultado es:");
 outtextxy(x,y,R);
}




void waitForLeftMouseClick()
{
    clearmouseclick(WM_LBUTTONDOWN);
    const int DELAY = 50; // Milliseconds of delay between checks
    int x, y;
    while (!ismouseclick(WM_LBUTTONDOWN))
        delay(DELAY);
    getmouseclick(WM_LBUTTONDOWN, x, y);
}


void fondo(void)
{
  int ff[69][85] = {
3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,
3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,
3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,
3,0,0,0,1,1,1,1,1,0,1,1,1,1,0,0,1,1,1,0,0,0,1,1,1,0,0,1,1,1,1,0,0,0,1,1,0,0,0,0,1,0,1,0,0,0,0,1,1,0,0,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,0,0,1,1,0,0,0,1,0,1,0,0,0,0,3,
3,0,0,0,1,0,0,1,1,0,1,0,0,1,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,1,0,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1,0,0,1,0,0,0,1,0,0,1,0,0,1,0,0,0,1,0,1,1,1,0,1,1,0,0,0,1,0,1,0,0,0,0,3,
3,0,0,0,1,0,0,1,1,0,1,0,0,1,0,1,0,0,0,1,0,1,0,0,0,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,1,0,1,0,0,1,0,0,1,0,0,1,0,0,0,0,0,0,1,0,0,1,0,0,0,1,0,1,1,1,1,1,1,0,0,0,1,0,1,0,0,0,0,3,
3,0,0,0,1,1,1,1,1,0,1,1,1,1,0,1,0,0,0,1,0,1,0,0,0,0,0,1,1,1,1,0,1,1,1,1,1,1,0,1,0,1,0,1,0,1,1,1,1,1,1,0,1,0,0,0,0,0,0,1,0,0,1,0,0,0,1,0,1,1,0,1,1,1,0,1,0,0,0,0,0,1,0,0,3,
3,0,0,0,1,1,0,0,0,0,1,0,1,0,0,1,0,0,0,1,0,1,0,1,1,1,0,1,0,1,0,0,1,0,0,0,0,1,0,1,0,0,0,1,0,1,0,0,0,0,1,0,1,0,0,0,0,0,0,1,0,0,1,0,0,0,1,0,1,1,0,1,1,1,0,0,1,0,0,0,1,0,0,0,3,
3,0,0,0,1,1,0,0,0,0,1,0,0,1,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,1,0,1,0,0,0,0,1,0,1,0,0,0,1,0,1,0,0,0,0,1,0,1,0,0,0,1,0,0,1,0,0,1,0,0,0,1,0,1,1,0,0,1,1,0,0,0,1,1,1,0,0,0,0,3,
3,0,0,0,1,1,0,0,0,0,1,0,0,1,0,0,1,1,1,0,0,0,1,1,1,0,0,1,0,0,1,0,1,0,0,0,0,1,0,1,0,0,0,1,0,1,0,0,0,0,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,3,
3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,
3,0,2,2,0,0,0,2,0,0,0,0,2,0,2,2,0,2,0,0,0,0,2,2,2,0,0,2,0,0,0,0,2,0,0,2,2,0,2,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,2,0,0,0,0,0,0,0,2,0,0,0,0,0,2,0,0,0,0,0,0,2,0,0,0,0,2,0,0,3,
3,0,0,2,0,0,0,2,2,2,2,0,0,0,2,2,2,2,2,0,0,0,2,0,2,0,0,0,0,0,0,0,2,0,0,0,2,2,2,0,2,0,0,0,2,0,0,2,0,0,0,2,0,0,0,0,2,0,0,0,0,2,0,0,0,2,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,0,3,
3,0,0,0,0,2,0,2,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,0,0,0,2,0,0,2,0,0,0,2,0,0,0,0,0,2,0,2,0,0,2,0,2,0,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,0,0,0,2,0,2,0,0,0,0,2,0,0,0,0,0,0,2,0,0,3,
3,0,0,0,2,0,0,2,0,0,0,2,0,0,0,0,2,0,0,0,2,0,0,0,0,0,0,2,2,0,0,0,0,0,2,0,0,2,0,0,2,2,0,0,0,0,0,2,2,2,2,0,0,0,0,0,2,0,0,0,2,0,0,0,0,0,0,2,2,0,0,0,0,0,0,2,2,2,0,0,0,0,0,0,3,
3,0,2,0,0,0,0,0,0,2,0,0,0,2,0,0,2,0,0,0,2,0,2,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,2,0,2,0,0,0,0,2,0,2,0,0,0,0,2,0,0,0,2,0,0,0,0,0,0,0,0,0,0,2,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,3,
3,0,2,2,0,0,0,2,0,0,0,0,2,0,2,2,0,2,0,0,0,0,2,2,2,0,0,2,0,0,0,0,2,0,0,2,2,0,2,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,2,0,0,0,0,0,0,0,2,0,0,0,0,0,2,0,0,0,0,0,0,2,0,0,0,0,2,0,0,3,
3,0,0,2,0,0,0,2,2,2,2,0,0,0,2,2,2,2,2,0,0,0,2,0,2,0,0,0,0,0,0,0,2,0,0,0,2,2,2,0,2,0,0,0,2,0,0,2,0,0,0,2,0,0,0,0,2,0,0,0,0,2,0,0,0,2,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,0,3,
3,0,0,0,0,2,0,2,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,0,0,0,2,0,0,2,0,0,0,2,0,0,0,0,0,2,0,2,0,0,2,0,2,0,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,0,0,0,2,0,2,0,0,0,0,2,0,0,0,0,0,0,2,0,0,3,
3,0,0,0,2,0,0,2,0,0,0,2,0,0,0,0,2,0,0,0,2,0,0,0,0,0,0,2,2,0,0,0,0,0,2,0,0,2,0,0,2,2,0,0,0,0,0,2,2,2,2,0,0,0,0,0,2,0,0,0,2,0,0,0,0,0,0,2,2,0,0,0,0,0,0,2,2,2,0,0,0,0,0,0,3,
3,0,2,0,0,0,0,0,0,2,0,0,0,2,0,0,2,0,0,0,2,0,2,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,2,0,2,0,0,0,0,2,0,2,0,0,0,0,2,0,0,0,2,0,0,0,0,0,0,0,0,0,0,2,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,3,
3,0,2,2,0,0,0,2,0,0,0,0,2,0,2,2,0,2,0,0,0,0,2,2,2,0,0,2,0,0,0,0,2,0,0,2,2,0,2,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,2,0,0,0,0,0,0,0,2,0,0,0,0,0,2,0,0,0,0,0,0,2,0,0,0,0,2,0,0,3,
3,0,0,2,0,0,0,2,2,2,2,0,0,0,2,2,2,2,2,0,0,0,2,0,2,0,0,0,0,0,0,0,2,0,0,0,2,2,2,0,2,0,0,0,2,0,0,2,0,0,0,2,0,0,0,0,2,0,0,0,0,2,0,0,0,2,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,0,3,
3,0,0,0,0,2,0,2,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,0,0,0,2,0,0,2,0,0,0,2,0,0,0,0,0,2,0,2,0,0,2,0,2,0,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,0,0,0,2,0,2,0,0,0,0,2,0,0,0,0,0,0,2,0,0,3,
3,0,0,0,2,0,0,2,0,0,0,2,0,0,0,0,2,0,0,0,2,0,0,0,0,0,0,2,2,0,0,0,0,0,2,0,0,2,0,0,2,2,0,0,0,0,0,2,2,2,2,0,0,0,0,0,2,0,0,0,2,0,0,0,0,0,0,2,2,0,0,0,0,0,0,2,2,2,0,0,0,0,0,0,3,
3,0,2,0,0,0,0,0,0,2,0,0,0,2,0,0,2,0,0,0,2,0,2,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,2,0,2,0,0,0,0,2,0,2,0,0,0,0,2,0,0,0,2,0,0,0,0,0,0,0,0,0,0,2,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,3,
3,0,2,2,0,0,0,2,0,0,0,0,2,0,2,2,0,2,0,0,0,0,2,2,2,0,0,2,0,0,0,0,2,0,0,2,2,0,2,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,2,0,0,0,0,0,0,0,2,0,0,0,0,0,2,0,0,0,0,0,0,2,0,0,0,0,2,0,0,3,
3,0,0,2,0,0,0,2,2,2,2,0,0,0,2,2,2,2,2,0,0,0,2,0,2,0,0,0,0,0,0,0,2,0,0,0,2,2,2,0,2,0,0,0,2,0,0,2,0,0,0,2,0,0,0,0,2,0,0,0,0,2,0,0,0,2,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,0,3,
3,0,0,0,0,2,0,2,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,0,0,0,2,0,0,2,0,0,0,2,0,0,0,0,0,2,0,2,0,0,2,0,2,0,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,0,0,0,2,0,2,0,0,0,0,2,0,0,0,0,0,0,2,0,0,3,
3,0,0,0,2,0,0,2,0,0,0,2,0,0,0,0,2,0,0,0,2,0,0,0,0,0,0,2,2,0,0,0,0,0,2,0,0,2,0,0,2,2,0,0,0,0,0,2,2,2,2,0,0,0,0,0,2,0,0,0,2,0,0,0,0,0,0,2,2,0,0,0,0,0,0,2,2,2,0,0,0,0,0,0,3,
3,0,2,0,0,0,0,0,0,2,0,0,0,2,0,0,2,0,0,0,2,0,2,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,2,0,2,0,0,0,0,2,0,2,0,0,0,0,2,0,0,0,2,0,0,0,0,0,0,0,0,0,0,2,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,3,
3,0,2,2,0,0,0,2,0,0,0,0,2,0,2,2,0,2,0,0,0,0,2,2,2,0,0,2,0,0,0,0,2,0,0,2,2,0,2,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,2,0,0,0,0,0,0,0,2,0,0,0,0,0,2,0,0,0,0,0,0,2,0,0,0,0,2,0,0,3,
3,0,0,2,0,0,0,2,2,2,2,0,0,0,2,2,2,2,2,0,0,0,2,0,2,0,0,0,0,0,0,0,2,0,0,0,2,2,2,0,2,0,0,0,2,0,0,2,0,0,0,2,0,0,0,0,2,0,0,0,0,2,0,0,0,2,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,0,3,
3,0,0,0,0,2,0,2,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,0,0,0,2,0,0,2,0,0,0,2,0,0,0,0,0,2,0,2,0,0,2,0,2,0,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,0,0,0,2,0,2,0,0,0,0,2,0,0,0,0,0,0,2,0,0,3,
3,0,0,0,2,0,0,2,0,0,0,2,0,0,0,0,2,0,0,0,2,0,0,0,0,0,0,2,2,0,0,0,0,0,2,0,0,2,0,0,2,2,0,0,0,0,0,2,2,2,2,0,0,0,0,0,2,0,0,0,2,0,0,0,0,0,0,2,2,0,0,0,0,0,0,2,2,2,0,0,0,0,0,0,3,
3,0,2,0,0,0,0,0,0,2,0,0,0,2,0,0,2,0,0,0,2,0,2,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,2,0,2,0,0,0,0,2,0,2,0,0,0,0,2,0,0,0,2,0,0,0,0,0,0,0,0,0,0,2,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,3,
3,0,2,2,0,0,0,2,0,0,0,0,2,0,2,2,0,2,0,0,0,0,2,2,2,0,0,2,0,0,0,0,2,0,0,2,2,0,2,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,2,0,0,0,0,0,0,0,2,0,0,0,0,0,2,0,0,0,0,0,0,2,0,0,0,0,2,0,0,3,
3,0,0,2,0,0,0,2,2,2,2,0,0,0,2,2,2,2,2,0,0,0,2,0,2,0,0,0,0,0,0,0,2,0,0,0,2,2,2,0,2,0,0,0,2,0,0,2,0,0,0,2,0,0,0,0,2,0,0,0,0,2,0,0,0,2,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,0,3,
3,0,0,0,0,2,0,2,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,0,0,0,2,0,0,2,0,0,0,2,0,0,0,0,0,2,0,2,0,0,2,0,2,0,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,0,0,0,2,0,2,0,0,0,0,2,0,0,0,0,0,0,2,0,0,3,
3,0,0,0,2,0,0,2,0,0,0,2,0,0,0,0,2,0,0,0,2,0,0,0,0,0,0,2,2,0,0,0,0,0,2,0,0,2,0,0,2,2,0,0,0,0,0,2,2,2,2,0,0,0,0,0,2,0,0,0,2,0,0,0,0,0,0,2,2,0,0,0,0,0,0,2,2,2,0,0,0,0,0,0,3,
3,0,2,0,0,0,0,0,0,2,0,0,0,2,0,0,2,0,0,0,2,0,2,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,2,0,2,0,0,0,0,2,0,2,0,0,0,0,2,0,0,0,2,0,0,0,0,0,0,0,0,0,0,2,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,3,
3,0,2,2,0,0,0,2,0,0,0,0,2,0,2,2,0,2,0,0,0,0,2,2,2,0,0,2,0,0,0,0,2,0,0,2,2,0,2,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,2,0,0,0,0,0,0,0,2,0,0,0,0,0,2,0,0,0,0,0,0,2,0,0,0,0,2,0,0,3,
3,0,0,2,0,0,0,2,2,2,2,0,0,0,2,2,2,2,2,0,0,0,2,0,2,0,0,0,0,0,0,0,2,0,0,0,2,2,2,0,2,0,0,0,2,0,0,2,0,0,0,2,0,0,0,0,2,0,0,0,0,2,0,0,0,2,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,0,3,
3,0,0,0,0,2,0,2,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,0,0,0,2,0,0,2,0,0,0,2,0,0,0,0,0,2,0,2,0,0,2,0,2,0,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,0,0,0,2,0,2,0,0,0,0,2,0,0,0,0,0,0,2,0,0,3,
3,0,0,0,2,0,0,2,0,0,0,2,0,0,0,0,2,0,0,0,2,0,0,0,0,0,0,2,2,0,0,0,0,0,2,0,0,2,0,0,2,2,0,0,0,0,0,2,2,2,2,0,0,0,0,0,2,0,0,0,2,0,0,0,0,0,0,2,2,0,0,0,0,0,0,2,2,2,0,0,0,0,0,0,3,
3,0,2,0,0,0,0,0,0,2,0,0,0,2,0,0,2,0,0,0,2,0,2,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,2,0,2,0,0,0,0,2,0,2,0,0,0,0,2,0,0,0,2,0,0,0,0,0,0,0,0,0,0,2,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,3,
3,0,2,2,0,0,0,2,0,0,0,0,2,0,2,2,0,2,0,0,0,0,2,2,2,0,0,2,0,0,0,0,2,0,0,2,2,0,2,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,2,0,0,0,0,0,0,0,2,0,0,0,0,0,2,0,0,0,0,0,0,2,0,0,0,0,2,0,0,3,
3,0,0,2,0,0,0,2,2,2,2,0,0,0,2,2,2,2,2,0,0,0,2,0,2,0,0,0,0,0,0,0,2,0,0,0,2,2,2,0,2,0,0,0,2,0,0,2,0,0,0,2,0,0,0,0,2,0,0,0,0,2,0,0,0,2,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,0,3,
3,0,0,0,0,2,0,2,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,0,0,0,2,0,0,2,0,0,0,2,0,0,0,0,0,2,0,2,0,0,2,0,2,0,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,0,0,0,2,0,2,0,0,0,0,2,0,0,0,0,0,0,2,0,0,3,
3,0,0,0,2,0,0,2,0,0,0,2,0,0,0,0,2,0,0,0,2,0,0,0,0,0,0,2,2,0,0,0,0,0,2,0,0,2,0,0,2,2,0,0,0,0,0,2,2,2,2,0,0,0,0,0,2,0,0,0,2,0,0,0,0,0,0,2,2,0,0,0,0,0,0,2,2,2,0,0,0,0,0,0,3,
3,0,2,0,0,0,0,0,0,2,0,0,0,2,0,0,2,0,0,0,2,0,2,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,2,0,2,0,0,0,0,2,0,2,0,0,0,0,2,0,0,0,2,0,0,0,0,0,0,0,0,0,0,2,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,3,
3,0,2,2,0,0,0,2,0,0,0,0,2,0,2,2,0,2,0,0,0,0,2,2,2,0,0,2,0,0,0,0,2,0,0,2,2,0,2,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,2,0,0,0,0,0,0,0,2,0,0,0,0,0,2,0,0,0,0,0,0,2,0,0,0,0,2,0,0,3,
3,0,0,2,0,0,0,2,2,2,2,0,0,0,2,2,2,2,2,0,0,0,2,0,2,0,0,0,0,0,0,0,2,0,0,0,2,2,2,0,2,0,0,0,2,0,0,2,0,0,0,2,0,0,0,0,2,0,0,0,0,2,0,0,0,2,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,0,3,
3,0,0,0,0,2,0,2,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,0,0,0,2,0,0,2,0,0,0,2,0,0,0,0,0,2,0,2,0,0,2,0,2,0,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,0,0,0,2,0,2,0,0,0,0,2,0,0,0,0,0,0,2,0,0,3,
3,0,0,0,2,0,0,2,0,0,0,2,0,0,0,0,2,0,0,0,2,0,0,0,0,0,0,2,2,0,0,0,0,0,2,0,0,2,0,0,2,2,0,0,0,0,0,2,2,2,2,0,0,0,0,0,2,0,0,0,2,0,0,0,0,0,0,2,2,0,0,0,0,0,0,2,2,2,0,0,0,0,0,0,3,
3,0,2,0,0,0,0,0,0,2,0,0,0,2,0,0,2,0,0,0,2,0,2,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,2,0,2,0,0,0,0,2,0,2,0,0,0,0,2,0,0,0,2,0,0,0,0,0,0,0,0,0,0,2,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,3,
3,0,2,2,0,0,0,2,0,0,0,0,2,0,2,2,0,2,0,0,0,0,2,2,2,0,0,2,0,0,0,0,2,0,0,2,2,0,2,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,2,0,0,0,0,0,0,0,2,0,0,0,0,0,2,0,0,0,0,0,0,2,0,0,0,0,2,0,0,3,
3,0,0,2,0,0,0,2,2,2,2,0,0,0,2,2,2,2,2,0,0,0,2,0,2,0,0,0,0,0,0,0,2,0,0,0,2,2,2,0,2,0,0,0,2,0,0,2,0,0,0,2,0,0,0,0,2,0,0,0,0,2,0,0,0,2,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,0,3,
3,0,0,0,0,2,0,2,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,0,0,0,2,0,0,2,0,0,0,2,0,0,0,0,0,2,0,2,0,0,2,0,2,0,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,0,0,0,2,0,2,0,0,0,0,2,0,0,0,0,0,0,2,0,0,3,
3,0,0,0,2,0,0,2,0,0,0,2,0,0,0,0,2,0,0,0,2,0,0,0,0,0,0,2,2,0,0,0,0,0,2,0,0,2,0,0,2,2,0,0,0,0,0,2,2,2,2,0,0,0,0,0,2,0,0,0,2,0,0,0,0,0,0,2,2,0,0,0,0,0,0,2,2,2,0,0,0,0,0,0,3,
3,0,2,0,0,0,0,0,0,2,0,0,0,2,0,0,2,0,0,0,2,0,2,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,2,0,2,0,0,0,0,2,0,2,0,0,0,0,2,0,0,0,2,0,0,0,0,0,0,0,0,0,0,2,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,3,
3,0,2,2,0,0,0,2,0,0,0,0,2,0,2,2,0,2,0,0,0,0,2,2,2,0,0,2,0,0,0,0,2,0,0,2,2,0,2,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,2,0,0,0,0,0,0,0,2,0,0,0,0,0,2,0,0,0,0,0,0,2,0,0,0,0,2,0,0,3,
3,0,0,2,0,0,0,2,2,2,2,0,0,0,2,2,2,2,2,0,0,0,2,0,2,0,0,0,0,0,0,0,2,0,0,0,2,2,2,0,2,0,0,0,2,0,0,2,0,0,0,2,0,0,0,0,2,0,0,0,0,2,0,0,0,2,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,0,3,
3,0,0,0,0,2,0,2,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,0,0,0,2,0,0,2,0,0,0,2,0,0,0,0,0,2,0,2,0,0,2,0,2,0,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,0,0,0,2,0,2,0,0,0,0,2,0,0,0,0,0,0,2,0,0,3,
3,0,0,0,2,0,0,2,0,0,0,2,0,0,0,0,2,0,0,0,2,0,0,0,0,0,0,2,2,0,0,0,0,0,2,0,0,2,0,0,2,2,0,0,0,0,0,2,2,2,2,0,0,0,0,0,2,0,0,0,2,0,0,0,0,0,0,2,2,0,0,0,0,0,0,2,2,2,0,0,0,0,0,0,3,
3,0,2,0,0,0,0,0,0,2,0,0,0,2,0,0,2,0,0,0,2,0,2,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,2,0,2,0,0,0,0,2,0,2,0,0,0,0,2,0,0,0,2,0,0,0,0,0,0,0,0,0,0,2,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,3,
3,0,2,2,0,0,0,2,0,0,0,0,2,0,2,2,0,2,0,0,0,0,2,2,2,0,0,2,0,0,0,0,2,0,0,2,2,0,2,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,2,0,0,0,0,0,0,0,2,0,0,0,0,0,2,0,0,0,0,0,0,2,0,0,0,0,2,0,0,3,
3,0,0,2,0,0,0,2,2,2,2,0,0,0,2,2,2,2,2,0,0,0,2,0,2,0,0,0,0,0,0,0,2,0,0,0,2,2,2,0,2,0,0,0,2,0,0,2,0,0,0,2,0,0,0,0,2,0,0,0,0,2,0,0,0,2,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,0,3,
3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,

} ;
int i, j, lx = 0, ly = 0, ch ,x, y,q1,q2,q3;

/* draw boundary */
rectangle ( 0, 0, x, y ) ;


for ( i = 0 ; i < 69 ; i++ )
{
for ( j = 0 ; j < 85 ; j++ )
{
if ( ff[i][j]==1 ){

setcolor(3);
setfillstyle(1,3);
rectangle ( lx, ly, lx + 15, ly + 9 ) ;
floodfill(lx+7,ly+5,3);
}

if ( ff[i][j]==2 ){
q1=random(150)+100;
q2=random(150)+100;
q3=random(150)+100;
setcolor(COLOR(q1,q2,q3));
setfillstyle(1,COLOR(q1,q2,q3));
rectangle ( lx, ly, lx + 15, ly + 9 ) ;
floodfill(lx+7,ly+5,COLOR(q1,q2,q3));
}

if ( ff[i][j]==3 ){

setcolor(2);
setfillstyle(1,2);
rectangle ( lx, ly, lx + 15, ly + 9 ) ;
floodfill(lx+7,ly+5,2);
}

lx = lx + 16 ;
}
lx = 0 ;
ly = ly + 10 ;
}
}  

